---
layout: post
title: "List Implementation"
comments: true
keywords: "learnpython"
date: 2023-09-27 16:41:00 +05:30
tags: learnpython 
---

## List

Lists are mutable in Python.<br/>
Lists can contain heterogeneous data types and objects. For instance, integers, strings, and even functions can be stored within the same list.<br/>

#### Methods

| Method        | Description           | 
| ------------- |:---------------------------------------------------------------------------------:|
| append()      | Adds an element at the end of the list                                            | 
| clear()       | Removes all the elements from the list                                            | 
| copy()        | Returns a copy of the list                                                        | 
| count()       | Returns the number of elements with the specified value                           | 
| extend()      | Add the elements of a list (or any iterable), to the end of the current list      | 
| index()       | Returns the index of the first element with the specified value                   | 
| insert()      | Adds an element at the specified position                                         | 
| pop()         | Removes the element at the specified position                                     | 
| remove()      | Removes the first item with the specified value                                   | 
| reverse()     | Reverses the order of the list                                                    | 
| sort()        | Sorts the list                                                                    | 


#### How elements are stored in list

The elements in the list are not stored themselves. Instead, every element of the list is stored at random locations, and the list stores the address of those random locations.<br/>
If we change an element at a specific index, then new value is stored at different location and new address is stored in place of the old on in the list.


#### How is continuity of Lists maintained?

If there is no empty space at the end of the list 'ls' python will find a new block in the memory of double the size of the list 'ls' and copy all the element of the list 'ls' into it and now 'ls' will point to that new list & then append the new element at end at there is enough space for more new elements. This process is called Resizing of List and is used in python because lists are dynamically allocated. 

